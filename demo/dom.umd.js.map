{"version":3,"file":"dom.umd.js","sources":["../lib/addRef.js","../lib/h.js","../lib/Collector.js","../lib/renderers/array.js","../lib/renderers/raw.js","../lib/renderers/directdom.js","../lib/renderers/primitive.js","../lib/renderers/dom.js","../lib/renderers/stateless.js","../lib/renderers/class.js","../lib/dispatch.js","../lib/render.js","../lib/Component.js","demo.js"],"sourcesContent":["'use strict'\n\n/**\n * > Create a callback ref function\n *\n * @param {(object|function)} obj Object or Component instance to add the reference to\n * @param {string} refName Name of the reference. Will be accessible from `obj[refName]`\n *\n * @return {function} A callback ref function\n *\n * @example\n * import { h, render, addRef, Component } from '@internet/dom'\n *\n * class App extends Component () {\n *   template () {\n *     return (\n *       <div>\n *         <button ref={addRef(this, 'button')}>A button</button>\n *       </div>\n *     )\n *\n *     componentDidMount () {\n *        console.log('Button is mounted:', this.button)\n *     }\n *   }\n * }\n *\n * render(<App />, document.body)\n */\nfunction addRef (obj, key) {\n  return function (ref) {\n    obj[key] = ref\n  }\n}\n\nexport default addRef\n","'use strict'\n\n/**\n * > Creates a VNode (virtual DOM element).\n *\n * @param {string | function} nodeName A tagname or a component. e.g. `'div'`, `'a'`, `Component`\n * @param {object} [props={}] Attributes/props to set on the created element.\n * @param {...VNode[]} [children=[]] All additional arguments are vnode children\n *\n * @return {object} A vnode object containing its type, props, children and some flags\n *\n * @example\n * import { h, render } from '@internet/dom'\n *\n * // Create a new vnode using JSX (via Babel or Bubl√©)\n * const node = <div style=\"color: red\">Hello</div>\n *\n * // The same node can be made using directly the `h` function\n * const node = h('div', { style: 'color: red' }, 'Hello')\n *\n * // render the created node into <body>\n * render(node, document.body)\n */\nfunction h (type, props) {\n  var vn = {}\n  vn.type = type\n  vn.props = props || {}\n  vn.children = [].concat.apply([], [].slice.call(arguments, 2)) // array & flatten\n\n  vn.isComponent = typeof type === 'function' && type.prototype && typeof type.prototype.render === 'function'\n  vn.isStateless = typeof type === 'function' && !vn.isComponent\n  vn.isDom = typeof type === 'string'\n  return vn\n}\n\nexport default h\n","'use strict'\n\nvar TYPES = ['nodes', 'components', 'refs']\n\nfunction Collector () {\n  this.data = {}\n  for (var i = 0; i < TYPES.length; i++) this.data[TYPES[i]] = []\n}\n\nCollector.prototype.append = function (obj) {\n  for (var k in obj) this.data[k] = this.data[k].concat(obj[k])\n}\n\nCollector.prototype.set = function (obj) {\n  for (var k in obj) this.data[k] = obj[k]\n}\n\nCollector.prototype.get = function () {\n  return this.data\n}\n\nexport default Collector\n","'use strict'\n\nimport Collector from '../Collector'\nimport rawRender from './raw'\n\nfunction arr (e) { return Array.isArray(e) ? e : [e] }\n\nfunction renderArray (vdoms) {\n  vdoms = arr(vdoms)\n  var collector = new Collector()\n  for (var i = 0; i < vdoms.length; i++) collector.append(rawRender(vdoms[i]))\n  return collector.get()\n}\n\nexport default renderArray\n","'use strict'\n\nimport renderArray from './array'\nimport renderClass from './class'\nimport renderDirectDom from './directdom'\nimport renderDom from './dom'\nimport renderPrimitive from './primitive'\nimport renderStateless from './stateless'\n\nfunction rawRender (vdom) {\n  if (Array.isArray(vdom)) return renderArray(vdom)\n  if (vdom instanceof window.Element) return renderDirectDom(vdom)\n  if (typeof vdom !== 'object') return renderPrimitive(vdom)\n\n  // one-level deep flatten children array\n  var props = Object.assign(\n    {},\n    vdom.props,\n    { children: [].concat.apply([], vdom.children || []) }\n  )\n\n  if (vdom.isDom) return renderDom(vdom, props)\n  if (vdom.isStateless) return renderStateless(vdom, props)\n  if (vdom.isComponent) return renderClass(vdom, props)\n}\n\nexport default rawRender\n","'use strict'\n\nimport Collector from '../Collector'\n\nfunction renderDirectDom (vdom, props) {\n  var collector = new Collector()\n  collector.append({ nodes: vdom })\n  return collector.get()\n}\n\nexport default renderDirectDom\n","'use strict'\n\nimport Collector from '../Collector'\n\nfunction renderPrimitive (vdom) {\n  var collector = new Collector()\n  if (typeof vdom === 'string' || typeof vdom === 'number') {\n    collector.append({ nodes: document.createTextNode(vdom + '') })\n  }\n  return collector.get()\n}\n\nexport default renderPrimitive\n","'use strict'\n\nimport Collector from '../Collector'\nimport rawRender from './raw'\n\nfunction startsWith (str, w) { return str.substr(0, w.length) === w }\n\n// set attributes for a dom node\nfunction setAttribute (dom, key, value) {\n  if (key === 'class') key = 'className'\n  if (typeof value === 'function' && startsWith(key, 'on')) {\n    var eventType = key.toLowerCase()\n    dom[eventType] = value\n  } else if (key === 'checked' || key === 'value' || key === 'className') {\n    dom[key] = value\n  } else if (key === 'style') {\n    if (typeof value === 'object') Object.assign(dom.style, value)\n    else if (typeof value === 'string') dom.style.cssText = value\n  } else if (typeof value !== 'object' && typeof value !== 'function') {\n    dom.setAttribute(key, value)\n  }\n}\n\nfunction renderDom (vdom, props) {\n  // render and collect vdom's children\n  var collector = new Collector()\n  var domChildren = []\n  for (var i = 0; i < props.children.length; i++) {\n    var result = rawRender(props.children[i])\n    if (result.nodes) {\n      domChildren = domChildren.concat(result.nodes)\n      collector.append({ components: result.components, refs: result.refs })\n    }\n  }\n\n  // create dom element\n  var el = document.createElement(vdom.type)\n  for (var k in vdom.props) setAttribute(el, k, vdom.props[k])\n  for (i = 0; i < domChildren.length; i++) el.appendChild(domChildren[i])\n\n  if (props.ref) collector.append({ refs: { ref: el, fn: props.ref } })\n  collector.append({ nodes: el })\n  return collector.get()\n}\n\nexport default renderDom\n","'use strict'\n\nimport Collector from '../Collector'\nimport rawRender from './raw'\n\nfunction renderStateless (_vdom, props) {\n  var collector = new Collector()\n  var vdom = _vdom.type(props)\n  collector.append(rawRender(vdom))\n  return collector.get()\n}\n\nexport default renderStateless\n","'use strict'\n\nimport Collector from '../Collector'\nimport rawRender from './raw'\n\nfunction renderClass (_vdom, props) {\n  var collector = new Collector()\n\n  // instanciate it and call willMount\n  var instance = new _vdom.type(props) // eslint-disable-line\n  instance.componentWillMount(props)\n\n  var vdom = instance.template(props)\n  // append its own ref ? not sur if I need to do this here or in the collector reset\n  if (props.ref) collector.append({ refs: { ref: instance, fn: props.ref } })\n  collector.append(rawRender(vdom))\n\n  // create a useful \"base\" property\n  var nodes = collector.data.nodes\n  instance.base = nodes.length > 1 ? nodes : nodes[0]\n\n  // collect all sub refs / components and add them to the instance's own collector\n  instance._collector = {}\n  instance._collector.components = collector.data.components\n  instance._collector.refs = collector.data.refs\n\n  // reset the collector (collector.components only contains the current instance)\n  // used for possible parents and for correct didmount / refs dispatching\n  collector.set({ components: [instance], refs: [] })\n\n  // add a parent \"private\" property to each sub-components\n  for (var i = 0; i < instance._collector.components.length; i++) {\n    instance._collector.components[i]._parent = instance\n  }\n\n  return collector.get()\n}\n\nexport default renderClass\n","'use strict'\n\nexport function dispatch (component, cb, topDown) {\n  var subs = component._collector && component._collector.components\n  if (topDown) cb(component)\n  if (subs) for (var i = 0; i < subs.length; i++) dispatch(subs[i], cb)\n  if (!topDown) cb(component)\n}\n\nfunction callRefs (component) {\n  for (var i = 0; i < component._collector.refs.length; i++) {\n    component._collector.refs[i].fn(component._collector.refs[i].ref)\n    component._collector.refs[i].ref = null // Is this really needed or a good thing ?\n  }\n}\n\nexport function dispatchRefs (component) {\n  dispatch(component, callRefs)\n}\n","'use strict'\n\nimport rawRender from './renderers/raw'\nimport { dispatchRefs, dispatch } from './dispatch'\n\n/**\n * > Renders a virtual node and mount-it into a `parent` Element\n *\n * > ** :warning: `render` always dispatch lifecycle events. Even if you don't pass a parent as 2nd argument, all componentDidMount methods and callback refs will be called. Be carreful!**\n *\n * > ** :warning: If you render a virtual node inside an already mounted component,\n * use its [component.render method](#Component+render) instead. **\n * Otherwise, the rendered subcomponents and callback refs will not be register as \"childs\" of the parent component.\n * This can lead to bad lifecycle dispatching if you destroy the parent for instance.\n *\n * @param {object} vnode A (JSX) VNode to render\n * @param {(HTMLElement|function)} [parent] DOM Element to render into. **You can also use a callback function:** the function will be called with DOM Elements to mount as first argument\n * @param {Component} [parentComponent] The parent component instance where the vnode will be mounted. You can directly use `parentComponent.render(vnode, parent)`\n *\n * @return {object} Return an object containing:\n *   - `result.nodes` : Array of rendered DOM nodes\n *   - `result.components` : First-level components instances\n *   - `result.refs` : First-level callback refs\n *\n * @example\n * import { h, render } from '@internet/dom'\n * import App from 'components/App'\n *\n * // Instanciate an App component and append it to document.body\n * render(<App />, document.body)\n *\n * // Insert a new div into document.body, before the first child of document.body\n * render(<div>Some text</div>, div => {\n *   document.body.insertBefore(div, document.body.firstChild)\n * })\n */\nfunction render (vnode, parent, context) {\n  // render\n  var rendered = rawRender(vnode)\n\n  // mount\n  var nodes = rendered.nodes.length < 2 ? rendered.nodes[0] : rendered.nodes\n  if (typeof parent === 'function') parent(nodes)\n  else if (parent) parent.appendChild(nodes)\n\n  // dispatch callback refs and didmounts\n  var mockComponent = { _collector: rendered } // for dispatch convenience\n  dispatchRefs(mockComponent)\n  dispatch(mockComponent, function (c) {\n    c.mounted = true\n    c.componentDidMount && c.componentDidMount(c.props)\n  })\n\n  // Add items to context\n  if (context && context._collector) {\n    var c = context._collector\n    for (var i = 0; i < rendered.components.length; i++) {\n      rendered.components[i]._parent = context\n    }\n    if (c.refs) c.refs = c.refs.concat(rendered.refs)\n    if (c.components) c.components = c.components.concat(rendered.components)\n  }\n\n  mockComponent = undefined\n  return rendered\n}\n\nexport default render\n","'use strict'\n\nimport _render from './render'\n\n/**\n * Create a new Component\n * @class Component\n * @param {object} [props={}] Component properties / attributes. Can also contains children.\n * @constructor\n */\n\nfunction Component (props) {\n  this._parent = null\n  this._collector = { refs: [], components: [] }\n\n  /**\n   * > Contains all component properties and children. <br>\n   * > Do not modify directly, but recreate a new component using cloneElement instead\n   * @type {object}\n   * @category Properties\n   */\n  this.props = props || {}\n\n  /**\n   * > HTMLElement used as \"base\" for the component instance. Can also be an array of elements if `template` return an array.\n   * @type {(VNode|HTMLElement|array)}\n   * @category Properties\n   */\n  this.base = null\n\n  /**\n   * Set to true when component is mounted\n   * @type {boolean}\n   * @category Properties\n   */\n  this.mounted = false\n}\n\n/**\n * > `component.template` will be called during the component initial rendering to create the `component.base` node\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n * @return {(VNode|HTMLElement)} VNode (JSX or `h` calls) or real HTMLElement that will be rendered as the `component.base` node. You can also return an array of elements.\n * @example\n * import { h, Component, render } from '@internet/dom'\n *\n * class HelloDiv extends Component {\n *   template () {\n *     // will create a new p tag\n *     return <div>Hello!</div>\n *   }\n * }\n * // Append a new \"Hello!\" div to document.body\n * render(<HelloDiv/>, document.body)\n *\n * class MainComponent extends Component {\n *   template () {\n *     // use the existing <main> node as the component base\n *     return document.querySelector('main')\n *   }\n * }\n *\n * // Create a new MainComponent, using an already existing dom node\n * render(<MainComponent />)\n */\nComponent.prototype.template = function () {}\n\n/**\n * > `component.componentWillMount` will be called by `render` just before a the component template rendering\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n */\nComponent.prototype.componentWillMount = function componentWillMount () {}\n\n/**\n * > `component.componentDidMount` will be called by `render` when all the rendered dom tree is mounted\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n */\nComponent.prototype.componentDidMount = function componentDidMount () {}\n\n/**\n * > `component.componentWillUnmount` will be called when the component or one of its ancestors is destroyed\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n */\nComponent.prototype.componentWillUnmount = function componentWillUnmount () {}\n\n/**\n * > Render a vnode or array of vnodes and register the rendered content as \"child\" of this component. <br>\n * > Use this method when you want to add content to the component after the initial rendering. <br>\n * > This ensures new items will be correctly unmount when the component is destroyed.\n * @method\n * @category Methods\n * @param {object} vnode A (JSX) VNode to render\n * @param {(HTMLElement|function)} [parent] DOM Element to render into. **You can also use a callback function:** the function will be called with DOM Elements to mount as first argument\n * @return {object} Return an object containing rendered `nodes`, `components` and `refs`\n *\n * @example\n * import { h, Component, render } from '@internet/dom'\n *\n * class Item extends Component {\n *   template () {\n *     return <li>Item</li>\n *   }\n * }\n *\n * class List extends Component {\n *   template () {\n *     return (\n *       <div>\n *         <ul ref={el => { this.ul = el }}></ul>\n *         <button ref={el => { this.button = el }}>Add Item</button>\n *       </div>\n *     )\n *   }\n *\n *   addItem () {\n *     // Render a new Item instance and add it to the list\n *     // All created Items will be properly destroyed when the List instance is removed\n *     this.render(<Item />, this.ul)\n *   }\n *\n *   componentDidMount () {\n *     this.addItem = this.addItem.bind(this)\n *     this.button.addEventListener('click', this.addItem)\n *   }\n *\n *   componentWillUnmount () {\n *     this.button.removeEventListener('click', this.addItem)\n *   }\n * }\n *\n * render(<List />, document.body)\n */\nComponent.prototype.render = function render (vdom, parent) { _render(vdom, parent, this) }\n\n/**\n * Destroy the component and its children components.\n *  - This also remove component props and de-reference the component from its parent.\n *  - Callback refs inside the component tree will be called with `null` as first argument\n *  - Set component.mounted to false\n * @method\n * @category Methods\n * @example\n * import { h, Component, render } from '@internet/dom'\n *\n * class SelfDestructButton extends Component () {\n *   template() {\n *      return <button>Destroy me</button>\n *   }\n *\n *   componentDidMount() {\n *     this.destroy = this.destroy.bind(this)\n *     this.base.addEventListener('click', this.destroy)\n *   }\n *\n *   componentWillUnmount() {\n *     this.base.removeEventListener('click', this.destroy)\n *   }\n * }\n *\n * render(<SelfDestructButton />, document.body)\n */\nComponent.prototype.destroy = function destroy () {\n  var i = 0\n  this.componentWillUnmount(this.props)\n\n  // destroy subcomponents\n  for (i = this._collector.components.length - 1; i >= 0; i--) {\n    this._collector.components[i].destroy()\n  }\n\n  this.mounted = false\n\n  // unregister component from parent and dispose _parent\n  if (this._parent) {\n    var index = this._parent._collector.components.indexOf(this)\n    if (~index) this._parent._collector.components.splice(index, 1)\n    this._parent = null\n  }\n\n  // callback all ref with null and destroy them from the collector\n  for (i = this._collector.refs.length - 1; i >= 0; i--) {\n    this._collector.refs[i].fn(null)\n    this._collector.refs.splice(i, 1)\n  }\n\n  // Unmount from dom\n  var base = Array.isArray(this.base) ? this.base : [this.base]\n  for (i = 0; i < base.length; i++) {\n    if (base[i] && base[i].parentNode) base[i].parentNode.removeChild(base[i])\n  }\n\n  // Remove base\n  this.base = base = null\n\n  // Remove props to avoid memory leaks\n  this.props = {}\n}\n\nexport default Component\n","import { h, render, Component, addRef } from '../lib' // eslint-disable-line\n\nfunction RemoveButton ({ children, ref }) {\n  return (\n    <button className='btn' ref={ref}>Remove: {children}</button>\n  )\n}\n\nclass Counter extends Component {\n  template () {\n    return <span />\n  }\n  increment () {\n    this.base.textContent = ' Alive since ' + this.count++ + 'sec'\n    console.log('increment')\n  }\n  componentDidMount () {\n    this.count = 0\n    this.increment = this.increment.bind(this)\n    this.increment()\n    this.timer = window.setInterval(this.increment, 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n}\n\nclass Item extends Component {\n  template ({ count }) {\n    return (\n      <li>\n        <button className='btn primary' ref={addRef(this, 'addButton')}>Add list</button>\n        <RemoveButton ref={addRef(this, 'removeButton')}>item {count}</RemoveButton>\n        <Counter />\n      </li>\n    )\n  }\n\n  addList () {\n    this.render(<List />, this.base)\n  }\n\n  componentDidMount () {\n    this.destroy = this.destroy.bind(this)\n    this.addList = this.addList.bind(this)\n    this.removeButton.addEventListener('click', this.destroy)\n    this.addButton.addEventListener('click', this.addList)\n  }\n\n  componentWillUnmount () {\n    console.log('remove', this.props.count)\n    this.removeButton.removeEventListener('click', this.destroy)\n    this.addButton.removeEventListener('click', this.addList)\n  }\n}\n\nclass List extends Component {\n  template () {\n    return (\n      <div style='border-left: 2px solid black; padding-left: 10px'>\n        <ul ref={addRef(this, 'ul')} />\n        <button className='btn primary' ref={addRef(this, 'button')}>Add item</button>\n      </div>\n    )\n  }\n\n  componentDidMount () {\n    this.count = 0\n    this.addItem = this.addItem.bind(this)\n    this.button.addEventListener('click', this.addItem)\n  }\n\n  addItem () {\n    this.render(<Item count={++this.count} />, this.ul)\n  }\n\n  componentWillUnmount () {\n    this.button.removeEventListener('click', this.addItem)\n  }\n}\n\nclass App extends Component {\n  template () {\n    return document.querySelector('main')\n  }\n\n  componentDidMount () {\n    this.base.style.paddingTop = '20px'\n    this.render(<List />, this.base)\n    this.base.addEventListener('click', () => { console.log(this) })\n  }\n}\n\nrender(<App />)\n"],"names":["addRef","obj","key","ref","h","type","props","vn","children","concat","apply","slice","call","arguments","isComponent","prototype","render","isStateless","isDom","TYPES","Collector","this","data","i","length","renderArray","vdoms","e","Array","isArray","collector","append","rawRender","get","vdom","window","Element","nodes","renderDirectDom","document","createTextNode","renderPrimitive","Object","assign","domChildren","result","components","refs","dom","value","w","el","createElement","k","substr","toLowerCase","style","cssText","setAttribute","appendChild","fn","renderDom","_vdom","renderStateless","instance","componentWillMount","template","base","_collector","set","_parent","renderClass","dispatch","component","cb","topDown","subs","callRefs","vnode","parent","context","rendered","mockComponent","c","mounted","componentDidMount","undefined","Component","RemoveButton","ref$1","componentWillUnmount","_render","destroy","index","indexOf","splice","parentNode","removeChild","Counter","increment","textContent","count","console","log","bind","timer","setInterval","clearInterval","Item","addButton","addItem"],"mappings":"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"}