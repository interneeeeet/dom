{"version":3,"file":"dom.umd.js","sources":["../lib/addRef.js","../lib/h.js","../lib/utils/Collector.js","../lib/utils/setDomAttrib.js","../lib/utils/rawRender.js","../lib/utils/dispatch.js","../lib/render.js","../lib/Component.js","Subtree.js","demo.js","Svg.js"],"sourcesContent":["'use strict'\n\n/**\n * > Create a callback ref function\n *\n * @param {(object|function)} obj Object or Component instance to add the reference to\n * @param {string} refName Name of the reference. Will be accessible from `obj[refName]`\n *\n * @return {function} A callback ref function\n *\n * @example\n * import { h, render, addRef, Component } from '@internet/dom'\n *\n * class App extends Component () {\n *   template () {\n *     return (\n *       <div>\n *         <button ref={addRef(this, 'button')}>A button</button>\n *       </div>\n *     )\n *\n *     componentDidMount () {\n *        console.log('Button is mounted:', this.button)\n *     }\n *   }\n * }\n *\n * render(<App />, document.body)\n */\nfunction addRef (obj, key) {\n  return function (ref) {\n    obj[key] = ref\n  }\n}\n\nexport default addRef\n","'use strict'\n\n/**\n * > Creates a VNode (virtual DOM element).\n *\n * @param {string | function} nodeName A tagname or a component. e.g. `'div'`, `'a'`, `Component`\n * @param {object} [props={}] Attributes/props to set on the created element.\n * @param {...VNode[]} [children=[]] All additional arguments are vnode children\n *\n * @return {object} A vnode object containing its type, props, children and some flags\n *\n * @example\n * import { h, render } from '@internet/dom'\n *\n * // Create a new vnode using JSX (via Babel or Bubl√©)\n * const node = <div style=\"color: red\">Hello</div>\n *\n * // The same node can be made using directly the `h` function\n * const node = h('div', { style: 'color: red' }, 'Hello')\n *\n * // render the created node into <body>\n * render(node, document.body)\n */\nfunction h (type, props) {\n  var vn = {}\n  vn.type = type\n  vn.props = props || {}\n  vn.children = [].concat.apply([], [].slice.call(arguments, 2)) // array & flatten\n\n  vn.isComponent = typeof type === 'function' && type.prototype && typeof type.prototype.render === 'function'\n  vn.isStateless = typeof type === 'function' && !vn.isComponent\n  vn.isDom = typeof type === 'string'\n  return vn\n}\n\nexport default h\n","'use strict'\n\nvar TYPES = ['nodes', 'components', 'refs']\n\nfunction Collector () {\n  this.data = {}\n  for (var i = 0; i < TYPES.length; i++) this.data[TYPES[i]] = []\n}\n\nCollector.prototype.append = function (obj) {\n  for (var k in obj) this.data[k] = this.data[k].concat(obj[k])\n}\n\nCollector.prototype.set = function (obj) {\n  for (var k in obj) this.data[k] = obj[k]\n}\n\nCollector.prototype.get = function () {\n  return this.data\n}\n\nexport default Collector\n","'use strict'\n\n// Some portions of code are taken from preact\n// https://github.com/developit/preact/blob/master/src/dom/index.js\n\nfunction startsWith (str, w) { return str.substr(0, w.length) === w }\nconst ns = ['xlink', 'xmlns', 'xml']\n\nfunction setDomAttrib (el, name, value, isSvg) {\n  // Normalize class attribute\n  if (name === 'className') name = 'class'\n\n  // Correct attribute like xlmns:xlink\n  for (var i = 0; i < ns.length; i++) {\n    if (startsWith(name, ns[i])) {\n      var len = ns[i].length\n      if (name[len] && name[len] !== ':') {\n        name = ns[i] + ':' + name[len].toLowerCase() + name.substr(len + 1, name.length)\n      }\n      break\n    }\n  }\n\n  // Ignored props\n  if (name === 'ref') {\n\n  // Event attribute\n  } else if (typeof value === 'function' && startsWith(name, 'on')) {\n    var eventType = name.toLowerCase()\n    el[eventType] = value\n\n  // Class - only for non-svg node\n  } else if (name === 'class' && !isSvg) {\n    el.className = value || ''\n\n  // Style attribute\n  } else if (name === 'style') {\n    if (typeof value === 'object') Object.assign(el.style, value)\n    else if (typeof value === 'string') el.style.cssText = value\n\n  // Attrib\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in el) {\n    // Attempt to set an attribute to the given value.\n    // IE & FF throw for certain property-value combinations.\n    try { el[name] = value == null ? '' : value } catch (e) { }\n\n  // Attrib via setAttribute\n  } else if (typeof value !== 'object' && typeof value !== 'function') {\n    let ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')))\n    if (ns) el.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value)\n    else el.setAttribute(name, value)\n  }\n}\n\nexport default setDomAttrib\n","'use strict'\n\nimport Collector from './Collector'\nimport setDomAttrib from './setDomAttrib'\n\nfunction arr (e) { return Array.isArray(e) ? e : [e] }\n\n// ---- RAW RENDERER ----\nfunction rawRender (vdom, isSvg) {\n  if (Array.isArray(vdom)) return renderArray(vdom, isSvg)\n  if (vdom instanceof window.Element) return renderDirectDom(vdom, isSvg)\n  if (typeof vdom !== 'object') return renderPrimitive(vdom, isSvg)\n\n  // one-level deep flatten children array\n  var props = Object.assign(\n    {},\n    vdom.props,\n    { children: [].concat.apply([], vdom.children || []) }\n  )\n\n  if (vdom.isDom) return renderDom(vdom, props, isSvg)\n  if (vdom.isStateless) return renderStateless(vdom, props, isSvg)\n  if (vdom.isComponent) return renderClass(vdom, props, isSvg)\n}\n\n// ---- ARRAY ----\nfunction renderArray (vdoms, isSvg) {\n  vdoms = arr(vdoms)\n  var collector = new Collector()\n  for (var i = 0; i < vdoms.length; i++) collector.append(rawRender(vdoms[i], isSvg))\n  return collector.get()\n}\n\n// ---- PRIMITIVE ----\nfunction renderPrimitive (vdom) {\n  var collector = new Collector()\n  if (typeof vdom === 'string' || typeof vdom === 'number') {\n    collector.append({ nodes: document.createTextNode(vdom + '') })\n  }\n  return collector.get()\n}\n\n// ---- DOM ----\nfunction renderDom (vdom, props, isSvg) {\n  // render and collect vdom's children\n  var collector = new Collector()\n  var domChildren = []\n\n  if (vdom.type === 'svg') isSvg = true\n\n  for (var i = 0; i < props.children.length; i++) {\n    var result = rawRender(props.children[i], isSvg)\n    if (result.nodes) {\n      domChildren = domChildren.concat(result.nodes)\n      collector.append({ components: result.components, refs: result.refs })\n    }\n  }\n\n  // create dom element\n  var el = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', vdom.type) : document.createElement(vdom.type)\n  for (var k in vdom.props) setDomAttrib(el, k, vdom.props[k], isSvg)\n  for (i = 0; i < domChildren.length; i++) el.appendChild(domChildren[i])\n\n  if (props.ref) collector.append({ refs: { ref: el, fn: props.ref } })\n  collector.append({ nodes: el })\n  return collector.get()\n}\n\n// ---- DIRECT DOM ----\nfunction renderDirectDom (vdom) {\n  var collector = new Collector()\n  collector.append({ nodes: vdom })\n  return collector.get()\n}\n\n// ---- STATELESS ----\nfunction renderStateless (_vdom, props, isSvg) {\n  var collector = new Collector()\n  var vdom = _vdom.type(props)\n  collector.append(rawRender(vdom, isSvg))\n  return collector.get()\n}\n\n// ---- CLASS ----\nfunction renderClass (_vdom, props, isSvg) {\n  var collector = new Collector()\n\n  // instanciate it and call willMount\n  var instance = new _vdom.type(props) // eslint-disable-line\n  instance.componentWillMount(props)\n\n  var vdom = instance.template(props)\n  // append its own ref ? not sur if I need to do this here or in the collector reset\n  if (props.ref) collector.append({ refs: { ref: instance, fn: props.ref } })\n  collector.append(rawRender(vdom, isSvg))\n\n  // create a useful \"base\" property\n  var nodes = collector.data.nodes\n  instance.base = nodes.length > 1 ? nodes : nodes[0]\n\n  // collect all sub refs / components and add them to the instance's own collector\n  instance._collector = {}\n  instance._collector.components = collector.data.components\n  instance._collector.refs = collector.data.refs\n\n  // reset the collector (collector.components only contains the current instance)\n  // used for possible parents and for correct didmount / refs dispatching\n  collector.set({ components: [instance], refs: [] })\n\n  // add a parent \"private\" property to each sub-components\n  for (var i = 0; i < instance._collector.components.length; i++) {\n    instance._collector.components[i]._parent = instance\n  }\n\n  return collector.get()\n}\n\nexport default rawRender\n","'use strict'\n\nexport function dispatch (component, cb, topDown) {\n  var subs = component._collector && component._collector.components\n  if (topDown) cb(component)\n  if (subs) for (var i = 0; i < subs.length; i++) dispatch(subs[i], cb)\n  if (!topDown) cb(component)\n}\n\nfunction callRefs (component) {\n  for (var i = 0; i < component._collector.refs.length; i++) {\n    component._collector.refs[i].fn(component._collector.refs[i].ref)\n    component._collector.refs[i].ref = null // Is this really needed or a good thing ?\n  }\n}\n\nexport function dispatchRefs (component) {\n  dispatch(component, callRefs)\n}\n","'use strict'\n\nimport rawRender from './utils/rawRender'\nimport { dispatchRefs, dispatch } from './utils/dispatch'\n\n/**\n * > Renders a virtual node and mount-it into a `parent` Element\n *\n * > :warning: `render` always dispatch lifecycle events. Even if you don't pass a parent as 2nd argument, all componentDidMount methods and callback refs will be called. Be carreful!\n *\n * > :warning: If you render a virtual node inside an already mounted component,\n * use its [component.render method](#Component+render) instead.\n * Otherwise, the rendered subcomponents and callback refs will not be register as \"childs\" of the parent component.\n * This can lead to bad lifecycle dispatching if you destroy the parent for instance.\n *\n * @param {object} vnode A (JSX) VNode to render\n * @param {(HTMLElement|function)} [parent] DOM Element to render into. **You can also use a callback function:** the function will be called with DOM Elements to mount as first argument\n * @param {Component} [parentComponent] The parent component instance where the vnode will be mounted. You can directly use `parentComponent.render(vnode, parent)`\n *\n * @return {object} Return an object containing:\n *   - `result.nodes` : Array of rendered DOM nodes\n *   - `result.components` : First-level components instances\n *   - `result.refs` : First-level callback refs\n *\n * @example\n * import { h, render } from '@internet/dom'\n * import App from 'components/App'\n *\n * // Instanciate an App component and append it to document.body\n * render(<App />, document.body)\n *\n * // Insert a new div into document.body, before the first child of document.body\n * render(<div>Some text</div>, div => {\n *   document.body.insertBefore(div, document.body.firstChild)\n * })\n */\nfunction render (vnode, parent, context) {\n  // render\n  var rendered = rawRender(vnode)\n\n  // mount\n  var nodes = rendered.nodes.length < 2 ? rendered.nodes[0] : rendered.nodes\n  if (typeof parent === 'function') parent(nodes)\n  else if (parent) parent.appendChild(nodes)\n\n  // dispatch callback refs and didmounts\n  var mockComponent = { _collector: rendered } // for dispatch convenience\n  dispatchRefs(mockComponent)\n  dispatch(mockComponent, function (c) {\n    c.mounted = true\n    c.componentDidMount && c.componentDidMount(c.props)\n  })\n\n  // Add items to context\n  if (context && context._collector) {\n    var c = context._collector\n    for (var i = 0; i < rendered.components.length; i++) {\n      rendered.components[i]._parent = context\n    }\n    if (c.refs) c.refs = c.refs.concat(rendered.refs)\n    if (c.components) c.components = c.components.concat(rendered.components)\n  }\n\n  mockComponent = undefined\n  return rendered\n}\n\nexport default render\n","'use strict'\n\nimport _render from './render'\n\n/**\n * Create a new Component\n * @class Component\n * @param {object} [props={}] Component properties / attributes. Can also contains children.\n * @constructor\n */\n\nfunction Component (props) {\n  this._parent = null\n  this._collector = { refs: [], components: [] }\n\n  /**\n   * > Contains all component properties and children. <br>\n   * > Do not modify it directly, but recreate a new component using `cloneElement` instead\n   * @type {object}\n   * @category Properties\n   */\n  this.props = props || {}\n\n  /**\n   * > HTMLElement used as \"base\" for the component instance. Can also be an array of elements if `template` return an array.\n   * @type {(VNode|HTMLElement|array)}\n   * @category Properties\n   */\n  this.base = null\n\n  /**\n   * Set to true when component is mounted\n   * @type {boolean}\n   * @category Properties\n   */\n  this.mounted = false\n}\n\n/**\n * > `component.template` will be called during the component initial rendering to create the `component.base` node\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n * @return {(VNode|HTMLElement)} VNode (JSX or `h` calls) or real HTMLElement that will be rendered as the `component.base` node. You can also return an array of elements.\n * @example\n * import { h, Component, render } from '@internet/dom'\n *\n * class HelloDiv extends Component {\n *   template () {\n *     // will create a new p tag\n *     return <div>Hello!</div>\n *   }\n * }\n * // Append a new \"Hello!\" div to document.body\n * render(<HelloDiv/>, document.body)\n *\n * class MainComponent extends Component {\n *   template () {\n *     // use the existing <main> node as the component base\n *     return document.querySelector('main')\n *   }\n * }\n *\n * // Create a new MainComponent, using an already existing dom node\n * render(<MainComponent />)\n */\nComponent.prototype.template = function () {}\n\n/**\n * > `component.componentWillMount` will be called by `render` just before a the component template rendering\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n */\nComponent.prototype.componentWillMount = function componentWillMount () {}\n\n/**\n * > `component.componentDidMount` will be called by `render` when all the rendered dom tree is mounted\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n */\nComponent.prototype.componentDidMount = function componentDidMount () {}\n\n/**\n * > `component.componentWillUnmount` will be called when the component or one of its ancestors is destroyed\n * @method\n * @category Methods\n * @param {object} [props={}] `component.props` automatically passed as argument.\n */\nComponent.prototype.componentWillUnmount = function componentWillUnmount () {}\n\n/**\n * > Render a vnode or array of vnodes and register the rendered content as \"child\" of this component. <br>\n * > Use this method when you want to add content to the component after the initial rendering. <br>\n * > This ensures new items will be correctly unmount when the component is destroyed.\n * @method\n * @category Methods\n * @param {object} vnode A (JSX) VNode to render\n * @param {(HTMLElement|function)} [parent] DOM Element to render into. **You can also use a callback function:** the function will be called with DOM Elements to mount as first argument\n * @return {object} Return an object containing rendered `nodes`, `components` and `refs`\n *\n * @example\n * import { h, Component, render } from '@internet/dom'\n *\n * class Item extends Component {\n *   template () {\n *     return <li>Item</li>\n *   }\n * }\n *\n * class List extends Component {\n *   template () {\n *     return (\n *       <div>\n *         <ul ref={el => { this.ul = el }}></ul>\n *         <button ref={el => { this.button = el }}>Add Item</button>\n *       </div>\n *     )\n *   }\n *\n *   addItem () {\n *     // Render a new Item instance and add it to the list\n *     // All created Items will be properly destroyed when the List instance is removed\n *     this.render(<Item />, this.ul)\n *   }\n *\n *   componentDidMount () {\n *     this.addItem = this.addItem.bind(this)\n *     this.button.addEventListener('click', this.addItem)\n *   }\n *\n *   componentWillUnmount () {\n *     this.button.removeEventListener('click', this.addItem)\n *   }\n * }\n *\n * render(<List />, document.body)\n */\nComponent.prototype.render = function render (vdom, parent) { _render(vdom, parent, this) }\n\n/**\n * Destroy the component and its children components.\n *  - This also removes component props and de-reference the component from its parent.\n *  - Callback refs inside the component tree will be called with `null` as first argument\n *  - Set component.mounted to false\n * @method\n * @category Methods\n * @example\n * import { h, Component, render } from '@internet/dom'\n *\n * class SelfDestructButton extends Component {\n *   template() {\n *      return <button>Destroy me</button>\n *   }\n *\n *   componentDidMount() {\n *     this.destroy = this.destroy.bind(this)\n *     this.base.addEventListener('click', this.destroy)\n *   }\n *\n *   componentWillUnmount() {\n *     this.base.removeEventListener('click', this.destroy)\n *   }\n * }\n *\n * render(<SelfDestructButton />, document.body)\n */\nComponent.prototype.destroy = function destroy () {\n  var i = 0\n  this.componentWillUnmount(this.props)\n\n  // destroy subcomponents\n  for (i = this._collector.components.length - 1; i >= 0; i--) {\n    this._collector.components[i].destroy()\n  }\n\n  this.mounted = false\n\n  // unregister component from parent and dispose _parent\n  if (this._parent) {\n    var index = this._parent._collector.components.indexOf(this)\n    if (~index) this._parent._collector.components.splice(index, 1)\n    this._parent = null\n  }\n\n  // callback all ref with null and destroy them from the collector\n  for (i = this._collector.refs.length - 1; i >= 0; i--) {\n    this._collector.refs[i].fn(null)\n    this._collector.refs.splice(i, 1)\n  }\n\n  // Unmount from dom\n  var base = Array.isArray(this.base) ? this.base : [this.base]\n  for (i = 0; i < base.length; i++) {\n    if (base[i] && base[i].parentNode) base[i].parentNode.removeChild(base[i])\n  }\n\n  // Remove base\n  this.base = base = null\n\n  // Remove props to avoid memory leaks\n  this.props = {}\n}\n\nexport default Component\n","import { h, Component, addRef } from '../lib'\n\nfunction RemoveButton ({ children, ref }) {\n  return (\n    <button className='btn' ref={ref}>Remove: {children}</button>\n  )\n}\n\nclass Counter extends Component {\n  template () {\n    return <span />\n  }\n  increment () {\n    this.base.textContent = ' Alive since ' + this.count++ + 'sec'\n    console.log('increment')\n  }\n  componentDidMount () {\n    this.count = 0\n    this.increment = this.increment.bind(this)\n    this.increment()\n    this.timer = window.setInterval(this.increment, 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n}\n\nclass Item extends Component {\n  template ({ count }) {\n    return (\n      <li>\n        <button className='btn primary' ref={addRef(this, 'addButton')}>Add list</button>\n        <RemoveButton ref={addRef(this, 'removeButton')}>item {count}</RemoveButton>\n        <Counter />\n      </li>\n    )\n  }\n\n  addList () {\n    this.render(<List />, this.base)\n  }\n\n  componentDidMount () {\n    this.destroy = this.destroy.bind(this)\n    this.addList = this.addList.bind(this)\n    this.removeButton.addEventListener('click', this.destroy)\n    this.addButton.addEventListener('click', this.addList)\n  }\n\n  componentWillUnmount () {\n    console.log('remove', this.props.count)\n    this.removeButton.removeEventListener('click', this.destroy)\n    this.addButton.removeEventListener('click', this.addList)\n  }\n}\n\nclass List extends Component {\n  template () {\n    return (\n      <div style='border-left: 2px solid black; padding-left: 10px'>\n        <ul ref={addRef(this, 'ul')} />\n        <button className='btn primary' ref={addRef(this, 'button')}>Add item</button>\n      </div>\n    )\n  }\n\n  componentDidMount () {\n    this.count = 0\n    this.addItem = this.addItem.bind(this)\n    this.button.addEventListener('click', this.addItem)\n  }\n\n  addItem () {\n    this.render(<Item count={++this.count} />, this.ul)\n  }\n\n  componentWillUnmount () {\n    this.button.removeEventListener('click', this.addItem)\n  }\n}\n\nexport default class Subtree extends Component {\n  template () {\n    const base = this.props.base\n    delete this.props.base\n    return base\n  }\n\n  componentDidMount () {\n    this.base.style.paddingTop = '20px'\n    this.render(<h4>List component:</h4>, this.base)\n    this.render(<List />, this.base)\n    this.base.addEventListener('click', () => { console.log(this) })\n  }\n}\n","import { h, render } from '../lib'\nimport Subtree from './Subtree'\nimport Svg from './Svg'\n\nrender(<Subtree base={document.querySelector('main')} />)\nrender(<Svg />, document.body)\n","import { h } from '../lib'\n\nexport default function Svg () {\n  return (\n    <div>\n      <br />\n      <h4>SVG support:</h4>\n      <svg version='1.1' id='Calque_1' xmlns='http://www.w3.org/2000/svg' xmlnsXlink='http://www.w3.org/1999/xlink' width='150px' x='0px' y='0px' viewBox='0 0 192 205' xmlSpace='preserve' enable-background='new 0 0 192 205'>\n        <g>\n          <defs>\n            <path id='SVGID_1_' d='M53,1h86c29.3,0,53,23.7,53,53v98c0,29.3-23.7,53-53,53H53c-29.3,0-53-23.7-53-53V54C0,24.7,23.7,1,53,1z' />\n          </defs>\n          <clipPath id='SVGID_2_'>\n            <use xlinkHref='#SVGID_1_' overflow='visible' />\n          </clipPath>\n          <rect x='-5' y='-4' width='202' height='214' clip-path='url(#SVGID_2_)' fill='#f4f4f4' />\n        </g>\n        <g>\n          <defs>\n            <rect id='SVGID_3_' x='31.9' y='30.8' width='52.5' height='52.3' />\n          </defs>\n          <clipPath id='SVGID_4_'>\n            <use xlinkHref='#SVGID_3_' overflow='visible' />\n          </clipPath>\n          <rect x='26.9' y='25.8' width='62.5' height='62.3' clip-path='url(#SVGID_4_)' fill='#fdaa02' />\n        </g>\n        <g>\n          <defs>\n            <polygon id='SVGID_5_' points='137.5,31 164,84 111,84' />\n          </defs>\n          <clipPath id='SVGID_6_'>\n            <use xlinkHref='#SVGID_5_' overflow='visible' />\n          </clipPath>\n          <g clip-path='url(#SVGID_6_)' enable-background='new'>\n            <g>\n              <defs>\n                <rect id='SVGID_7_' x='84' y='4' width='107' height='107' />\n              </defs>\n              <clipPath id='SVGID_8_'>\n                <use xlinkHref='#SVGID_7_' overflow='visible' />\n              </clipPath>\n              <g clip-path='url(#SVGID_8_)'>\n                <defs>\n                  <rect id='SVGID_9_' x='111' y='31' width='54' height='54' />\n                </defs>\n                <clipPath id='SVGID_10_'>\n                  <use xlinkHref='#SVGID_9_' overflow='visible' />\n                </clipPath>\n                <rect x='106' y='26' width='63' height='63' clip-path='url(#SVGID_10_)' fill='#fff' />\n              </g>\n              <g clip-path='url(#SVGID_8_)'>\n                <defs>\n                  <rect id='SVGID_11_' x='95.2' y='15.2' transform='matrix(0.9511 -0.309 0.309 0.9511 -10.9749 45.2164)' width='84' height='84' />\n                </defs>\n                <clipPath id='SVGID_12_'>\n                  <use xlinkHref='#SVGID_11_' overflow='visible' />\n                </clipPath>\n                <g clip-path='url(#SVGID_12_)'>\n                  <defs>\n                    <rect id='SVGID_13_' x='111' y='31' width='54' height='54' />\n                  </defs>\n                  <clipPath id='SVGID_14_'>\n                    <use xlinkHref='#SVGID_13_' overflow='visible' />\n                  </clipPath>\n                  <rect x='84.2' y='21.2' transform='matrix(0.9511 -0.309 0.309 0.9511 -14.6678 43.9006)' width='94' height='94' clip-path='url(#SVGID_14_)' />\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n        <path fill='none' stroke='#000' stroke-miterlimit='10' d='M70.6 160.2c-1.1-2.1-1.5-4.4-1.4-6.9l-8.4 4.1 9.8 2.8zm32.1-43.7C92.2 120 84 127.2 75.8 138.2c-1 1.3-1.9 2.7-2.6 3.9-1.8.1-3.7-.2-5.6-1-15.9-6.8 21.6-18.3 10.8-24.7-1.6-1-3.2-1.7-4.7-2.2L55 140.7l15.6 6.7c.6-1.7 1.5-3.5 2.6-5.3 12.7-.8 20.7-22 23.2-14.6.8 2.4 1.9 5.9 3 9.9 11.3-9 19.7-16.8 25.2-23.2 1.3.1 2.7.2 4.1.4 5.2.6 9.2 1.1 12.2 1.6 2.6 4.5 5.4 10.7 8.4 18.6-1 4.4-3.2 9.7-6.7 14.9l-32.4 14.8-6.9-3c0 2.7-.1 5.3-.5 7.7l5.7 1.6c10-1.2 18.1-5.2 24.5-10.3l-2.2-26-28.1-18zm-.1 52.7l-32-8.9c3.6 6.8 13.9 10.9 31.6 10.9.1-.3.2-.5.2-.8.1-.5.2-.9.2-1.2zm-3.2-31.7c-1.3 1.1-2.7 2.2-4.2 3.3l-26 12.6c.1-1.9.6-3.8 1.4-5.9l32.6 14.1c-.1-8.1-2-17-3.8-24.1zm3.3-21c6.3-2.1 13.4-2.8 21.9-2.2 1.4-1.7 2.6-3.3 3.7-4.8 3.2-4.7 7.4-2.5 12.6 6.8 11.3 1.9 9 4.3 9 13.9 0 1.4-.2 2.9-.6 4.6 1.2 3.1 2.5 6.5 3.8 10.2l-10.5 4.8c-2.5 3.8-5.8 7.5-9.7 10.7l1.5 17.6-25.9-7.2c-2 .2-4 .4-6.1.4-4.4 12.2-44.6 5.7-57.1-.8-12.8-6.7-6.5-28.4-6.5-31.6 0-3.1 3.7-19.9 13.1-22.3 8-2 13.9-5.2 22.1-2.2l7.9-11.2 20.8 13.3z' />\n      </svg>\n    </div>\n  )\n}\n"],"names":["addRef","obj","key","ref","h","type","props","vn","children","concat","apply","slice","call","arguments","isComponent","prototype","render","isStateless","isDom","TYPES","Collector","this","data","i","length","startsWith","str","w","substr","append","k","set","get","const","ns","setDomAttrib","el","name","value","isSvg","len","toLowerCase","Object","assign","style","cssText","e","replace","setAttributeNS","setAttribute","className","rawRender","vdom","Array","isArray","vdoms","collector","renderArray","window","Element","nodes","renderDirectDom","document","createTextNode","renderPrimitive","domChildren","result","components","refs","createElementNS","createElement","appendChild","fn","renderDom","_vdom","renderStateless","instance","componentWillMount","template","base","_collector","_parent","renderClass","dispatch","component","cb","topDown","subs","callRefs","vnode","parent","context","rendered","mockComponent","c","mounted","componentDidMount","undefined","Component","RemoveButton","ref$1","componentWillUnmount","_render","destroy","index","indexOf","splice","parentNode","removeChild","Counter","increment","textContent","count","console","log","bind","timer","setInterval","clearInterval","Item","addButton","addItem","body"],"mappings":"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"}